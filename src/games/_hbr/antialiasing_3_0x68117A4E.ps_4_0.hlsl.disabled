// ---- Created with 3Dmigoto v1.4.1 on Fri Jul  4 10:18:47 2025
Texture2D<float4> t2 : register(t2);

Texture2D<float4> t1 : register(t1);

Texture2D<float4> t0 : register(t0);

SamplerState s0_s : register(s0);

cbuffer cb0 : register(b0)
{
  float4 cb0[29];
}




// 3Dmigoto declarations
#define cmp -


void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  float2 w21 : TEXCOORD1,
  float4 v2 : TEXCOORD2,
  float4 v3 : TEXCOORD3,
  float4 v4 : TEXCOORD4,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 w1 = (w21.x, w21.y, v2.x, v2.y);

  r0.xyzw = t0.Sample(s0_s, v1.xy).xyzw;
  if (true) {
    o0.xyzw = float4(1.f, 1.f, 1.f, 1.f);

   // o0.xyzw = r0.xyzw;
    return;
  }

  r0.xy = cmp(float2(0,0) < r0.yx);
  if (r0.x != 0) {
    r1.xy = v2.xy;
    r1.z = 1;
    r2.x = 0;
    while (true) {
      r0.x = cmp(v4.x < r1.x);
      r0.z = cmp(0.828100026 < r1.z);
      r0.x = r0.z ? r0.x : 0;
      r0.z = cmp(r2.x == 0.000000);
      r0.x = r0.z ? r0.x : 0;
      if (r0.x == 0) break;
      r2.xyzw = t0.SampleLevel(s0_s, r1.xy, 0).xyzw;
      r1.xy = cb0[28].xy * float2(-2,-0) + r1.xy;
      r1.z = r2.y;
    }
    r2.yz = r1.xz;
    r0.xz = r2.xz * float2(0.5,-2) + float2(0.0078125,2.03125);
    r1.xyzw = t2.SampleLevel(s0_s, r0.xz, 0).xyzw;
    r0.x = r1.w * -2.00787401 + 3.25;
    r1.x = cb0[28].x * r0.x + r2.y;
    r1.y = v3.y;
    r2.xyzw = t0.SampleLevel(s0_s, r1.xy, 0).xyzw;
    r3.xy = v2.zw;
    r3.z = 1;
    r4.x = 0;
    while (true) {
      r0.x = cmp(r3.x < v4.y);
      r0.z = cmp(0.828100026 < r3.z);
      r0.x = r0.z ? r0.x : 0;
      r0.z = cmp(r4.x == 0.000000);
      r0.x = r0.z ? r0.x : 0;
      if (r0.x == 0) break;
      r4.xyzw = t0.SampleLevel(s0_s, r3.xy, 0).xyzw;
      r3.xy = cb0[28].xy * float2(2,0) + r3.xy;
      r3.z = r4.y;
    }
    r4.yz = r3.xz;
    r0.xz = r4.xz * float2(0.5,-2) + float2(0.5234375,2.03125);
    r3.xyzw = t2.SampleLevel(s0_s, r0.xz, 0).xyzw;
    r0.x = r3.w * -2.00787401 + 3.25;
    r1.z = -cb0[28].x * r0.x + r4.y;
    r0.xz = cb0[28].zz * r1.xz + -w1.xz;
    r0.xz = round(r0.xz);
    r0.xz = sqrt(abs(r0.xz));
    r1.xyzw = t0.SampleLevel(s0_s, r1.zy, 0, int2(0, 0)).yxzw;
    r1.x = r2.x;
    r1.xy = float2(4,4) * r1.xy;
    r1.xy = round(r1.xy);
    r0.xz = r1.xy * float2(16,16) + r0.xz;
    r0.xz = r0.xz * float2(0.00625000009,0.0017857143) + float2(0.00312500005,0.000892857148);
    r1.xyzw = t1.SampleLevel(s0_s, r0.xz, 0).xyzw;
    o0.xy = r1.xy;
  } else {
    o0.xy = float2(0,0);
  }
  if (r0.y != 0) {
    r0.xy = v3.xy;
    r0.z = 1;
    r1.x = 0;
    while (true) {
      r0.w = cmp(v4.z < r0.y);
      r2.x = cmp(0.828100026 < r0.z);
      r0.w = r0.w ? r2.x : 0;
      r2.x = cmp(r1.x == 0.000000);
      r0.w = r0.w ? r2.x : 0;
      if (r0.w == 0) break;
      r1.xyzw = t0.SampleLevel(s0_s, r0.xy, 0).yxzw;
      r0.xy = cb0[28].xy * float2(-0,-2) + r0.xy;
      r0.z = r1.y;
    }
    r1.yz = r0.yz;
    r0.xy = r1.xz * float2(0.5,-2) + float2(0.0078125,2.03125);
    r0.xyzw = t2.SampleLevel(s0_s, r0.xy, 0).xyzw;
    r0.x = r0.w * -2.00787401 + 3.25;
    r0.x = cb0[28].y * r0.x + r1.y;
    r0.y = v2.x;
    r1.xyzw = t0.SampleLevel(s0_s, r0.yx, 0).xyzw;
    r2.xy = v3.zw;
    r2.z = 1;
    r3.x = 0;
    while (true) {
      r0.w = cmp(r2.y < v4.w);
      r1.x = cmp(0.828100026 < r2.z);
      r0.w = r0.w ? r1.x : 0;
      r1.x = cmp(r3.x == 0.000000);
      r0.w = r0.w ? r1.x : 0;
      if (r0.w == 0) break;
      r3.xyzw = t0.SampleLevel(s0_s, r2.xy, 0).yxzw;
      r2.xy = cb0[28].xy * float2(0,2) + r2.xy;
      r2.z = r3.y;
    }
    r3.yz = r2.yz;
    r1.xz = r3.xz * float2(0.5,-2) + float2(0.5234375,2.03125);
    r2.xyzw = t2.SampleLevel(s0_s, r1.xz, 0).xyzw;
    r0.w = r2.w * -2.00787401 + 3.25;
    r0.z = -cb0[28].y * r0.w + r3.y;
    r0.xw = cb0[28].ww * r0.xz + -w1.yw;
    r0.xw = round(r0.xw);
    r0.xw = sqrt(abs(r0.xw));
    r2.xyzw = t0.SampleLevel(s0_s, r0.yz, 0, int2(0, 0)).xyzw;
    r2.x = r1.y;
    r0.yz = float2(4,4) * r2.xy;
    r0.yz = round(r0.yz);
    r0.xy = r0.yz * float2(16,16) + r0.xw;
    r0.xy = r0.xy * float2(0.00625000009,0.0017857143) + float2(0.00312500005,0.000892857148);
    r0.xyzw = t1.SampleLevel(s0_s, r0.xy, 0).xyzw;
    o0.zw = r0.xy;
  } else {
    o0.zw = float2(0,0);
  }
  return;
}