#include "keyboard_hook.hpp"

// This file is now deprecated - all functionality has been moved to hooks/
// Keeping for backward compatibility by implementing stubs that call the new functions

// The actual implementations are now in:
// - hooks/alt_tab_hook.cpp
// - hooks/window_message_hook.cpp  
// - hooks/window_subclass_hook.cpp
// - hooks/fullscreen_prevention_hook.cpp
// - hooks/borderless_style_hook.cpp

// Forward declarations to avoid circular includes
namespace {
    bool InstallAltTabHook_Impl();
    void UninstallAltTabHook_Impl();
    bool InstallMinimizeHook_Impl();
    void UninstallMinimizeHook_Impl();
    bool InstallResizeEnforcerHook_Impl();
    void UninstallResizeEnforcerHook_Impl();
    bool InstallWindowMessageHook_Impl();
    void UninstallWindowMessageHook_Impl();
    void StartBorderlessStyleTimer_Impl();
    void StopBorderlessStyleTimer_Impl();
    void ClearFixedWindowsTracking_Impl();
    void StartFullscreenPreventionTimer_Impl();
    void StopFullscreenPreventionTimer_Impl();
}

// Implement stubs that call the new functions
bool InstallAltTabHook() { return InstallAltTabHook_Impl(); }
void UninstallAltTabHook() { UninstallAltTabHook_Impl(); }
bool InstallMinimizeHook() { return InstallMinimizeHook_Impl(); }
void UninstallMinimizeHook() { UninstallMinimizeHook_Impl(); }
bool InstallResizeEnforcerHook() { return InstallResizeEnforcerHook_Impl(); }
void UninstallResizeEnforcerHook() { UninstallResizeEnforcerHook_Impl(); }
bool InstallWindowMessageHook() { return InstallWindowMessageHook_Impl(); }
void UninstallWindowMessageHook() { UninstallWindowMessageHook_Impl(); }
void StartBorderlessStyleTimer() { StartBorderlessStyleTimer_Impl(); }
void StopBorderlessStyleTimer() { StopBorderlessStyleTimer_Impl(); }
void ClearFixedWindowsTracking() { ClearFixedWindowsTracking_Impl(); }
void StartFullscreenPreventionTimer() { StartFullscreenPreventionTimer_Impl(); }
void StopFullscreenPreventionTimer() { StopFullscreenPreventionTimer_Impl(); }

// Stub implementations for other functions
bool InstallWindowStateLoggingHook() { return true; }
void UninstallWindowStateLoggingHook() {}
void LogWindowMoveMessage(WPARAM wParam, LPARAM lParam) {}
void LogWindowSizeMessage(WPARAM wParam, LPARAM lParam) {}
void LogWindowSystemCommand(WPARAM wParam, LPARAM lParam) {}
void LogWindowPositionChanged(WPARAM wParam, LPARAM lParam) {}
void LogWindowStyleChanged(WPARAM wParam, LPARAM lParam) {}
void LogWindowActivationChanged(WPARAM wParam, LPARAM lParam) {}
void LogWindowFocusChanged(UINT uMsg) {}
void LogWindowShowStateChanged(WPARAM wParam, LPARAM lParam) {}
void LogWindowPositionChanging(WPARAM wParam, LPARAM lParam) {}
void ApplyBorderlessStylesAggressively() {}
void ApplyBorderlessStylesToAllWindows() {}
void CleanupFixedWindowsTracking() {}
void LogWindowStyleStatistics() {}
bool InstallAllWindowHooks() { return true; }
void UninstallAllWindowHooks() {}

// Internal hook procedures (stubs)
LRESULT CALLBACK AltTabHookProc(int nCode, WPARAM wParam, LPARAM lParam) { return 0; }
LRESULT CALLBACK MinimizeWndProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) { return 0; }
LRESULT CALLBACK ResizeEnforcerWndProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) { return 0; }
LRESULT CALLBACK WindowMessageHookProc(int nCode, WPARAM wParam, LPARAM lParam) { return 0; }
VOID CALLBACK FullscreenPreventionTimerProc(HWND hwnd, UINT uMsg, UINT_PTR idEvent, DWORD dwTime) {}

// Now include the actual implementations by including the headers and implementing the namespace functions
#include "hooks/alt_tab_hook.hpp"
#include "hooks/window_message_hook.hpp"
#include "hooks/window_subclass_hook.hpp"
#include "hooks/fullscreen_prevention_hook.hpp"
#include "hooks/borderless_style_hook.hpp"

namespace {
    bool InstallAltTabHook_Impl() { return ::InstallAltTabHook(); }
    void UninstallAltTabHook_Impl() { ::UninstallAltTabHook(); }
    bool InstallMinimizeHook_Impl() { return ::InstallMinimizeHook(); }
    void UninstallMinimizeHook_Impl() { ::UninstallMinimizeHook(); }
    bool InstallResizeEnforcerHook_Impl() { return ::InstallResizeEnforcerHook(); }
    void UninstallResizeEnforcerHook_Impl() { ::UninstallResizeEnforcerHook(); }
    bool InstallWindowMessageHook_Impl() { return ::InstallWindowMessageHook(); }
    void UninstallWindowMessageHook_Impl() { ::UninstallWindowMessageHook(); }
    void StartBorderlessStyleTimer_Impl() { ::StartBorderlessStyleTimer(); }
    void StopBorderlessStyleTimer_Impl() { ::StopBorderlessStyleTimer(); }
    void ClearFixedWindowsTracking_Impl() { ::ClearFixedWindowsTracking(); }
    void StartFullscreenPreventionTimer_Impl() { ::StartFullscreenPreventionTimer(); }
    void StopFullscreenPreventionTimer_Impl() { ::StopFullscreenPreventionTimer(); }
}